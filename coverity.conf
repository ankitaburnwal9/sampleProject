// coverity.conf
// Coverity desktop analysis configuration file.

// See doc/en/desktop_analysis_user_guide.html#coverity_conf_file in the
// Coverity static analysis installation directory for full documentation.

{
  type: "Coverity configuration",
  format_version: 1,
  "format_minor_version": 4,
  "variables": {
        "cov_install_dir": "C:\\Program Files\\Coverity\\Coverity Static Analysis"
  },
  settings: {
    // Parameters to talk to Coverity Connect.
    server: {
      // Host name of the Coverity Connect server.
      host: "coverity-connect.cdpipeline.apmoller.net",

      // HTTP or HTTPS port number of the CC server, depending on
      // 'ssl'.  Defaults are 8080 and 8443, respectively.
      port: 8080,

      // True to enable SSL.  Default is false.
      ssl: false,
      "username": "$(env:COV_USER:USER:USERNAME)",                                                   // default
      "auth_key_file": "$(cov_user_dir)/authkeys/ak-$(server_host_as_fname)-$(server_port)"          // default
    },

    // Name of the stream on CC that contains summary information for
    // this code base.
    "stream": "always_on_ao-importrules_develop",
    "compiler_config_file": "$(code_base_dir)/data-coverity/v$(version)/config/coverity_config.xml", // default
    "compiler_configurations": [
      {
        "cov_configure_args": ["--javascript"]
      },
      {
        "cov_configure_args": ["--java"]
      }
    ],

    // Parameters to talk to the Source Code Management system.
    "scm": {
      "scm": "git",
	  "project_root": "$(code_base_dir)",
    },

    // Parameters for desktop analysis.
    "cov_run_desktop": {

	    "analysis_args": [
		    // Set the memory available for findbugs
            "--jvm-max-mem" , "8192"
        ],

			  // How to determine which reference snapshot to use.  The
      // default is "idir-date".  The recommended setting is "scm",
      // but that requires that the SCM be among the supported types
      // and enabled above.
      "reference_snapshot": "latest",

      // Command lines to clean and then build.
      "clean_cmd": ["mvn.cmd", "clean"],
      "build_cmd": ["mvn.cmd", "install"],
    },
    "known_installations": [
      {
        "version": "$(version)",
        "platform": "$(platform)",
        "kind": "cov-analysis",
        "directory": "$(var:cov_install_dir)"
      }
    ],
  }
}

// EOF
